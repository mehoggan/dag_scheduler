FROM debian

# Configure system (pre setup)
RUN rm -rf /var/lib/apt/lists/*
RUN apt-get clean
RUN touch /etc/apt/apt.conf.d/99fixbadproxy && \
  echo "Acquire::http::Pipeline-Depth 0;" > \
    /etc/apt/apt.conf.d/99fixbadproxy && \
  echo "Acquire::http::No-Cache true;" >> \
    /etc/apt/apt.conf.d/99fixbadproxy && \
  echo "Acquire::BrokenProxy true;" >> \
    /etc/apt/apt.conf.d/99fixbadproxy && \
  cat /etc/apt/apt.conf.d/99fixbadproxy
RUN apt update
RUN apt install -y build-essential autotools-dev autoconf-archive \
  checkinstall zlib1g-dev libbz2-dev liblzma-dev libzstd-dev valgrind \
  uuid-dev libgtest-dev libgmock-dev rapidjson-dev libyaml-cpp-dev doxygen \
  autoconf-archive checkinstall libtool libtool-bin make packaging-dev

# Add the source and build dependencies (actual setup)
RUN mkdir -p /home/dag_scheduler
ADD . /home/dag_scheduler
WORKDIR /home/dag_scheduler
# If the build fails locally make sure to `cd deps/openssl && make clean &&
# make distclean` on your local development box.
RUN cd /home/dag_scheduler/deps/openssl
RUN rm -rf /home/dag_scheduler/deps/build /home/dag_scheduler/build
RUN ./scripts/setup.deps.sh; echo "Status is $?"
