cmake_minimum_required(VERSION 3.0.2)
project(dagtasks)

option(BUILD_SHARED_LIBS "Build shared libraries over static library." ON)
option(DAGTASKS_TESTS "Build unit tests." ON)
option(DAGTASKS_BINDINGS "Build all bindings for the native library." ON)

list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake_modules)

if(${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
  set(CMAKE_MACOSX_RPATH 1)
endif()

include(${CMAKE_CURRENT_SOURCE_DIR}/cmake/c++11.cmake)

include_directories(${gtest_SOURCE_DIR}/include)
include_directories(${CMAKE_BINARY_DIR}/googletest-src/googletest/include)

# External Library (boost)
configure_file(${CMAKE_CURRENT_SOURCE_DIR}/CMakeLists.boostbeast.txt.in
  ${CMAKE_BINARY_DIR}/boostbeast-download/CMakeLists.txt)
include(${CMAKE_CURRENT_SOURCE_DIR}/cmake/boostbeast.cmake)
if(${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
  link_directories("/usr/local/opt/openssl/lib")
  include_directories("/usr/local/opt/openssl/include")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-deprecated-declarations")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-nonportable-include-path")
endif()
set(Boost_INCLUDE_DIR "${CMAKE_CURRENT_BINARY_DIR}/boostbeast/include"
  CACHE INTERNAL "Boost_INCLUDE_DIR")

# External Library (yaml)
configure_file(${CMAKE_CURRENT_SOURCE_DIR}/CMakeLists.yaml-cpp.txt.in
        ${CMAKE_BINARY_DIR}/yaml-cpp-download/CMakeLists.txt)
include(${CMAKE_CURRENT_SOURCE_DIR}/cmake/yaml-cpp.cmake)

# External Library (cpprestsdk)
configure_file(${CMAKE_CURRENT_SOURCE_DIR}/CMakeLists.cpprestsdk.txt.in
        ${CMAKE_BINARY_DIR}/cpprestsdk-download/CMakeLists.txt)
include(${CMAKE_CURRENT_SOURCE_DIR}/cmake/cpprestsdk.cmake)
# TODO (matthew.hoggan): Make Release CMAKE_BUILD_TYPE
link_directories(
  "${CMAKE_CURRENT_BINARY_DIR}/cpprestsdk-build/Release/Binaries")
include_directories(
  "${CMAKE_CURRENT_BINARY_DIR}/cpprestsdk-src/Release/include")

# External Library (rapidjson)
configure_file(${CMAKE_CURRENT_SOURCE_DIR}/CMakeLists.rapidjson.txt.in
        ${CMAKE_BINARY_DIR}/rapidjson-download/CMakeLists.txt)
include(${CMAKE_CURRENT_SOURCE_DIR}/cmake/rapidjson.cmake)
link_directories(
  "${CMAKE_CURRENT_BINARY_DIR}/rapidjson-build")
include_directories(
  "${CMAKE_CURRENT_BINARY_DIR}/rapidjson-src/include")

# External Library (aws-sdk-cpp)
configure_file(${CMAKE_CURRENT_SOURCE_DIR}/CMakeLists.aws-sdk-cpp.txt.in
        ${CMAKE_BINARY_DIR}/aws-sdk-cpp-download/CMakeLists.txt)
include(${CMAKE_CURRENT_SOURCE_DIR}/cmake/aws-sdk-cpp.cmake)
link_directories(
  "${CMAKE_CURRENT_BINARY_DIR}/aws-sdk-cpp-build")
foreach(aws-proj "aws-cpp-sdk-AWSMigrationHub"
  "aws-cpp-sdk-access-management"
  "aws-cpp-sdk-accessanalyzer"
  "aws-cpp-sdk-account"
  "aws-cpp-sdk-acm-pca"
  "aws-cpp-sdk-acm"
  "aws-cpp-sdk-alexaforbusiness"
  "aws-cpp-sdk-amp"
  "aws-cpp-sdk-amplify"
  "aws-cpp-sdk-amplifybackend"
  "aws-cpp-sdk-amplifyuibuilder"
  "aws-cpp-sdk-apigateway"
  "aws-cpp-sdk-apigatewaymanagementapi"
  "aws-cpp-sdk-apigatewayv2"
  "aws-cpp-sdk-appconfig"
  "aws-cpp-sdk-appconfigdata"
  "aws-cpp-sdk-appflow"
  "aws-cpp-sdk-appintegrations"
  "aws-cpp-sdk-application-autoscaling"
  "aws-cpp-sdk-application-insights"
  "aws-cpp-sdk-applicationcostprofiler"
  "aws-cpp-sdk-appmesh"
  "aws-cpp-sdk-apprunner"
  "aws-cpp-sdk-appstream"
  "aws-cpp-sdk-appsync"
  "aws-cpp-sdk-athena"
  "aws-cpp-sdk-auditmanager"
  "aws-cpp-sdk-autoscaling-plans"
  "aws-cpp-sdk-autoscaling"
  "aws-cpp-sdk-awstransfer"
  "aws-cpp-sdk-backup-gateway"
  "aws-cpp-sdk-backup"
  "aws-cpp-sdk-batch"
  "aws-cpp-sdk-braket"
  "aws-cpp-sdk-budgets"
  "aws-cpp-sdk-ce"
  "aws-cpp-sdk-chime-sdk-identity"
  "aws-cpp-sdk-chime-sdk-meetings"
  "aws-cpp-sdk-chime-sdk-messaging"
  "aws-cpp-sdk-chime"
  "aws-cpp-sdk-cloud9"
  "aws-cpp-sdk-cloudcontrol"
  "aws-cpp-sdk-clouddirectory"
  "aws-cpp-sdk-cloudformation"
  "aws-cpp-sdk-cloudfront"
  "aws-cpp-sdk-cloudhsm"
  "aws-cpp-sdk-cloudhsmv2"
  "aws-cpp-sdk-cloudsearch"
  "aws-cpp-sdk-cloudsearchdomain"
  "aws-cpp-sdk-cloudtrail"
  "aws-cpp-sdk-codeartifact"
  "aws-cpp-sdk-codebuild"
  "aws-cpp-sdk-codecommit"
  "aws-cpp-sdk-codedeploy"
  "aws-cpp-sdk-codeguru-reviewer"
  "aws-cpp-sdk-codeguruprofiler"
  "aws-cpp-sdk-codepipeline"
  "aws-cpp-sdk-codestar-connections"
  "aws-cpp-sdk-codestar-notifications"
  "aws-cpp-sdk-codestar"
  "aws-cpp-sdk-cognito-identity"
  "aws-cpp-sdk-cognito-idp"
  "aws-cpp-sdk-cognito-sync"
  "aws-cpp-sdk-comprehend"
  "aws-cpp-sdk-comprehendmedical"
  "aws-cpp-sdk-compute-optimizer"
  "aws-cpp-sdk-config"
  "aws-cpp-sdk-connect-contact-lens"
  "aws-cpp-sdk-connect"
  "aws-cpp-sdk-connectparticipant"
  "aws-cpp-sdk-core"
  "aws-cpp-sdk-cur"
  "aws-cpp-sdk-customer-profiles"
  "aws-cpp-sdk-databrew"
  "aws-cpp-sdk-dataexchange"
  "aws-cpp-sdk-datapipeline"
  "aws-cpp-sdk-datasync"
  "aws-cpp-sdk-dax"
  "aws-cpp-sdk-detective"
  "aws-cpp-sdk-devicefarm"
  "aws-cpp-sdk-devops-guru"
  "aws-cpp-sdk-directconnect"
  "aws-cpp-sdk-discovery"
  "aws-cpp-sdk-dlm"
  "aws-cpp-sdk-dms"
  "aws-cpp-sdk-docdb"
  "aws-cpp-sdk-drs"
  "aws-cpp-sdk-ds"
  "aws-cpp-sdk-dynamodb"
  "aws-cpp-sdk-dynamodbstreams"
  "aws-cpp-sdk-ebs"
  "aws-cpp-sdk-ec2-instance-connect"
  "aws-cpp-sdk-ec2"
  "aws-cpp-sdk-ecr-public"
  "aws-cpp-sdk-ecr"
  "aws-cpp-sdk-ecs"
  "aws-cpp-sdk-eks"
  "aws-cpp-sdk-elastic-inference"
  "aws-cpp-sdk-elasticache"
  "aws-cpp-sdk-elasticbeanstalk"
  "aws-cpp-sdk-elasticfilesystem"
  "aws-cpp-sdk-elasticloadbalancing"
  "aws-cpp-sdk-elasticloadbalancingv2"
  "aws-cpp-sdk-elasticmapreduce"
  "aws-cpp-sdk-elastictranscoder"
  "aws-cpp-sdk-email"
  "aws-cpp-sdk-emr-containers"
  "aws-cpp-sdk-es"
  "aws-cpp-sdk-eventbridge"
  "aws-cpp-sdk-events"
  "aws-cpp-sdk-evidently"
  "aws-cpp-sdk-finspace-data"
  "aws-cpp-sdk-finspace"
  "aws-cpp-sdk-firehose"
  "aws-cpp-sdk-fis"
  "aws-cpp-sdk-fms"
  "aws-cpp-sdk-forecast"
  "aws-cpp-sdk-forecastquery"
  "aws-cpp-sdk-frauddetector"
  "aws-cpp-sdk-fsx"
  "aws-cpp-sdk-gamelift"
  "aws-cpp-sdk-glacier"
  "aws-cpp-sdk-globalaccelerator"
  "aws-cpp-sdk-glue"
  "aws-cpp-sdk-grafana"
  "aws-cpp-sdk-greengrass"
  "aws-cpp-sdk-greengrassv2"
  "aws-cpp-sdk-groundstation"
  "aws-cpp-sdk-guardduty"
  "aws-cpp-sdk-health"
  "aws-cpp-sdk-healthlake"
  "aws-cpp-sdk-honeycode"
  "aws-cpp-sdk-iam"
  "aws-cpp-sdk-identity-management"
  "aws-cpp-sdk-identitystore"
  "aws-cpp-sdk-imagebuilder"
  "aws-cpp-sdk-importexport"
  "aws-cpp-sdk-inspector"
  "aws-cpp-sdk-inspector2"
  "aws-cpp-sdk-iot-data"
  "aws-cpp-sdk-iot-jobs-data"
  "aws-cpp-sdk-iot"
  "aws-cpp-sdk-iot1click-devices"
  "aws-cpp-sdk-iot1click-projects"
  "aws-cpp-sdk-iotanalytics"
  "aws-cpp-sdk-iotdeviceadvisor"
  "aws-cpp-sdk-iotevents-data"
  "aws-cpp-sdk-iotevents"
  "aws-cpp-sdk-iotfleethub"
  "aws-cpp-sdk-iotsecuretunneling"
  "aws-cpp-sdk-iotsitewise"
  "aws-cpp-sdk-iotthingsgraph"
  "aws-cpp-sdk-iottwinmaker"
  "aws-cpp-sdk-iotwireless"
  "aws-cpp-sdk-ivs"
  "aws-cpp-sdk-kafka"
  "aws-cpp-sdk-kafkaconnect"
  "aws-cpp-sdk-kendra"
  "aws-cpp-sdk-kinesis-video-archived-media"
  "aws-cpp-sdk-kinesis-video-media"
  "aws-cpp-sdk-kinesis-video-signaling"
  "aws-cpp-sdk-kinesis"
  "aws-cpp-sdk-kinesisanalytics"
  "aws-cpp-sdk-kinesisanalyticsv2"
  "aws-cpp-sdk-kinesisvideo"
  "aws-cpp-sdk-kms"
  "aws-cpp-sdk-lakeformation"
  "aws-cpp-sdk-lambda"
  "aws-cpp-sdk-lex-models"
  "aws-cpp-sdk-lex"
  "aws-cpp-sdk-lexv2-models"
  "aws-cpp-sdk-lexv2-runtime"
  "aws-cpp-sdk-license-manager"
  "aws-cpp-sdk-lightsail"
  "aws-cpp-sdk-location"
  "aws-cpp-sdk-logs"
  "aws-cpp-sdk-lookoutequipment"
  "aws-cpp-sdk-lookoutmetrics"
  "aws-cpp-sdk-lookoutvision"
  "aws-cpp-sdk-machinelearning"
  "aws-cpp-sdk-macie"
  "aws-cpp-sdk-macie2"
  "aws-cpp-sdk-managedblockchain"
  "aws-cpp-sdk-marketplace-catalog"
  "aws-cpp-sdk-marketplace-entitlement"
  "aws-cpp-sdk-marketplacecommerceanalytics"
  "aws-cpp-sdk-mediaconnect"
  "aws-cpp-sdk-mediaconvert"
  "aws-cpp-sdk-medialive"
  "aws-cpp-sdk-mediapackage-vod"
  "aws-cpp-sdk-mediapackage"
  "aws-cpp-sdk-mediastore-data"
  "aws-cpp-sdk-mediastore"
  "aws-cpp-sdk-mediatailor"
  "aws-cpp-sdk-memorydb"
  "aws-cpp-sdk-meteringmarketplace"
  "aws-cpp-sdk-mgn"
  "aws-cpp-sdk-migration-hub-refactor-spaces"
  "aws-cpp-sdk-migrationhub-config"
  "aws-cpp-sdk-migrationhubstrategy"
  "aws-cpp-sdk-mobile"
  "aws-cpp-sdk-mobileanalytics"
  "aws-cpp-sdk-monitoring"
  "aws-cpp-sdk-mq"
  "aws-cpp-sdk-mturk-requester"
  "aws-cpp-sdk-mwaa"
  "aws-cpp-sdk-neptune"
  "aws-cpp-sdk-network-firewall"
  "aws-cpp-sdk-networkmanager"
  "aws-cpp-sdk-nimble"
  "aws-cpp-sdk-opensearch"
  "aws-cpp-sdk-opsworks"
  "aws-cpp-sdk-opsworkscm"
  "aws-cpp-sdk-organizations"
  "aws-cpp-sdk-outposts"
  "aws-cpp-sdk-panorama"
  "aws-cpp-sdk-personalize-events"
  "aws-cpp-sdk-personalize-runtime"
  "aws-cpp-sdk-personalize"
  "aws-cpp-sdk-pi"
  "aws-cpp-sdk-pinpoint-email"
  "aws-cpp-sdk-pinpoint"
  "aws-cpp-sdk-polly"
  "aws-cpp-sdk-pricing"
  "aws-cpp-sdk-proton"
  "aws-cpp-sdk-qldb-session"
  "aws-cpp-sdk-qldb"
  "aws-cpp-sdk-queues"
  "aws-cpp-sdk-quicksight"
  "aws-cpp-sdk-ram"
  "aws-cpp-sdk-rbin"
  "aws-cpp-sdk-rds-data"
  "aws-cpp-sdk-rds"
  "aws-cpp-sdk-redshift-data"
  "aws-cpp-sdk-redshift"
  "aws-cpp-sdk-rekognition"
  "aws-cpp-sdk-resiliencehub"
  "aws-cpp-sdk-resource-groups"
  "aws-cpp-sdk-resourcegroupstaggingapi"
  "aws-cpp-sdk-robomaker"
  "aws-cpp-sdk-route53-recovery-cluster"
  "aws-cpp-sdk-route53-recovery-control-config"
  "aws-cpp-sdk-route53-recovery-readiness"
  "aws-cpp-sdk-route53"
  "aws-cpp-sdk-route53domains"
  "aws-cpp-sdk-route53resolver"
  "aws-cpp-sdk-rum"
  "aws-cpp-sdk-s3-crt"
  "aws-cpp-sdk-s3-encryption"
  "aws-cpp-sdk-s3"
  "aws-cpp-sdk-s3control"
  "aws-cpp-sdk-s3outposts"
  "aws-cpp-sdk-sagemaker-a2i-runtime"
  "aws-cpp-sdk-sagemaker-edge"
  "aws-cpp-sdk-sagemaker-featurestore-runtime"
  "aws-cpp-sdk-sagemaker-runtime"
  "aws-cpp-sdk-sagemaker"
  "aws-cpp-sdk-savingsplans"
  "aws-cpp-sdk-schemas"
  "aws-cpp-sdk-sdb"
  "aws-cpp-sdk-secretsmanager"
  "aws-cpp-sdk-securityhub"
  "aws-cpp-sdk-serverlessrepo"
  "aws-cpp-sdk-service-quotas"
  "aws-cpp-sdk-servicecatalog-appregistry"
  "aws-cpp-sdk-servicecatalog"
  "aws-cpp-sdk-servicediscovery"
  "aws-cpp-sdk-sesv2"
  "aws-cpp-sdk-shield"
  "aws-cpp-sdk-signer"
  "aws-cpp-sdk-sms-voice"
  "aws-cpp-sdk-sms"
  "aws-cpp-sdk-snow-device-management"
  "aws-cpp-sdk-snowball"
  "aws-cpp-sdk-sns"
  "aws-cpp-sdk-sqs"
  "aws-cpp-sdk-ssm-contacts"
  "aws-cpp-sdk-ssm-incidents"
  "aws-cpp-sdk-ssm"
  "aws-cpp-sdk-sso-admin"
  "aws-cpp-sdk-sso-oidc"
  "aws-cpp-sdk-sso"
  "aws-cpp-sdk-states"
  "aws-cpp-sdk-storagegateway"
  "aws-cpp-sdk-sts"
  "aws-cpp-sdk-support"
  "aws-cpp-sdk-swf"
  "aws-cpp-sdk-synthetics"
  "aws-cpp-sdk-text-to-speech"
  "aws-cpp-sdk-textract"
  "aws-cpp-sdk-timestream-query"
  "aws-cpp-sdk-timestream-write"
  "aws-cpp-sdk-transcribe"
  "aws-cpp-sdk-transcribestreaming"
  "aws-cpp-sdk-transfer"
  "aws-cpp-sdk-translate"
  "aws-cpp-sdk-voice-id"
  "aws-cpp-sdk-waf-regional"
  "aws-cpp-sdk-waf"
  "aws-cpp-sdk-wafv2"
  "aws-cpp-sdk-wellarchitected"
  "aws-cpp-sdk-wisdom"
  "aws-cpp-sdk-workdocs"
  "aws-cpp-sdk-worklink"
  "aws-cpp-sdk-workmail"
  "aws-cpp-sdk-workmailmessageflow"
  "aws-cpp-sdk-workspaces-web"
  "aws-cpp-sdk-workspaces"
  "aws-cpp-sdk-xray"
  "crt/aws-crt-cpp/crt/aws-c-auth"
  "crt/aws-crt-cpp/crt/aws-c-cal"
  "crt/aws-crt-cpp/crt/aws-c-common"
  "crt/aws-crt-cpp/crt/aws-c-common/verification/cbmc"
  "crt/aws-crt-cpp/crt/aws-c-event-stream"
  "crt/aws-crt-cpp/crt/aws-c-http"
  "crt/aws-crt-cpp/crt/aws-c-io"
  "crt/aws-crt-cpp/crt/aws-c-mqtt"
  "crt/aws-crt-cpp/crt/aws-c-s3"
  "crt/aws-crt-cpp/crt/aws-checksums"
  "crt/aws-crt-cpp/crt/aws-lc"
  "crt/aws-crt-cpp/crt/aws-lc/third_party/googletest"
  "crt/aws-crt-cpp/crt/s2n/tests/cbmc/aws-verification-model-for-libcrypto"
  "crt/aws-crt-cpp/crt/s2n/tests/cbmc"
  "crt/aws-crt-cpp/crt/s2n/tests/cbmc/templates/template-for-repository"
  "crt/aws-crt-cpp/crt/s2n/tests/sidetrail"
  "crt/aws-crt-cpp")
  include_directories(
    "${CMAKE_CURRENT_BINARY_DIR}/aws-sdk-cpp-src/${aws-proj}/include")
endforeach()

include_directories(
  ${UUID_INCLUDE_DIRS}
  "${CMAKE_BINARY_DIR}/boostbeast/include"
)
link_directories(
  "${CMAKE_BINARY_DIR}/boostbeast/lib"
)
add_subdirectory(lib)

add_subdirectory(bin)

if(DAGTASKS_TESTS)
  configure_file(${CMAKE_CURRENT_SOURCE_DIR}/CMakeLists.googletest.txt.in
    ${CMAKE_BINARY_DIR}/googletest-download/CMakeLists.txt)
  include(${CMAKE_CURRENT_SOURCE_DIR}/cmake/googletest.cmake)
  add_subdirectory(tests)
endif()
